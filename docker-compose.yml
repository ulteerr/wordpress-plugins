services:
  db:
    image: mysql:8.0
    container_name: ${CONTAINER_PREFIX}_db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DATABASE
    volumes:
      - ./_docker/mysql/data:/var/lib/mysql
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    networks:
      - wordpress-network

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: ${CONTAINER_PREFIX}_phpmyadmin
    restart: unless-stopped
    ports:
      - $PMA_HTTP_PORT:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD
    networks:
      - wordpress-network

  wordpress:
    depends_on:
      - db
    image: wordpress:6.7.1-php8.3-apache
    container_name: ${CONTAINER_PREFIX}_wordpress
    restart: unless-stopped
    build:
      context: . 
    ports:
      - $WORDPRESS_HTTP_PORT:80
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: $MYSQL_DATABASE
      WORDPRESS_DB_USER: 'root'
      WORDPRESS_DB_PASSWORD: $MYSQL_PASSWORD
      WORDPRESS_DEBUG: $WORDPRESS_DEBUG
      WP_REDIS_HOST: ${WP_REDIS_HOST}
      WP_REDIS_PORT: ${WP_REDIS_PORT}
    volumes:
      - ./:/var/www/html
      - ./docker/wordpress/php.ini:/usr/local/etc/php/php.ini
    networks:
      - wordpress-network


  redis:
    image: redis:alpine
    container_name: ${CONTAINER_PREFIX}_redis
    restart: always
    expose:
        - '${WP_REDIS_PORT}'
    ports:
      - "${REDIS_PORT}:${WP_REDIS_PORT}" 
    volumes:
      - ./_docker/redis:/data
    networks:
      - wordpress-network    

volumes:
  db-data:
  redis_data:


networks:
  wordpress-network:
    driver: bridge